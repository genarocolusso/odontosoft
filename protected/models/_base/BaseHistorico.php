<?php

/**
 * This is the model base class for the table "historico".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Historico".
 *
 * Columns in table "historico" available as properties of the model,
 * followed by relations of table "historico" available as properties of the model.
 *
 * @property integer $id_historico
 * @property integer $id_consulta
 * @property string $descricao
 * @property string $data_criacao
 * @property string $id_usuario
 *
 * @property Consulta $idConsulta
 * @property UsergroupsUser $idUsuario
 */
abstract class BaseHistorico extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'historico';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Historico|Historicos', $n);
	}

	public static function representingColumn() {
		return 'descricao';
	}

	public function rules() {
		return array(
			array('id_consulta, descricao, data_criacao, id_usuario', 'required'),
			array('id_consulta', 'numerical', 'integerOnly'=>true),
			array('id_usuario', 'length', 'max'=>20),
			array('id_historico, id_consulta, descricao, data_criacao, id_usuario', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'idConsulta' => array(self::BELONGS_TO, 'Consulta', 'id_consulta'),
			'idUsuario' => array(self::BELONGS_TO, 'UsergroupsUser', 'id_usuario'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id_historico' => Yii::t('app', 'Id Historico'),
			'id_consulta' => null,
			'descricao' => Yii::t('app', 'Descricao'),
			'data_criacao' => Yii::t('app', 'Data Criacao'),
			'id_usuario' => null,
			'idConsulta' => null,
			'idUsuario' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id_historico', $this->id_historico);
		$criteria->compare('id_consulta', $this->id_consulta);
		$criteria->compare('descricao', $this->descricao, true);
		$criteria->compare('data_criacao', $this->data_criacao, true);
		$criteria->compare('id_usuario', $this->id_usuario);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}